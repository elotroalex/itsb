{"version":3,"sources":["archive/phase 2/libs/d3-queue.js"],"names":["global","factory","exports","module","define","amd","d3","this","slice","noabort","Queue","size","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","i","t","j","length","c","end","apply","start","e","abort","r","maybeNotify","undefined","NaN","d","queue","concurrency","arguments","Infinity","prototype","constructor","defer","callback","call","push","await","error","results","concat","awaitAll","Object","defineProperty","value"],"mappings":"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","file":"../../../../archive/phase 2/libs/d3-queue.js","sourcesContent":["// https://d3js.org/d3-queue/ Version 3.0.5. Copyright 2017 Mike Bostock.\r\n(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n\t(factory((global.d3 = global.d3 || {})));\r\n}(this, (function (exports) { 'use strict';\r\n\r\nvar slice = [].slice;\r\n\r\nvar noabort = {};\r\n\r\nfunction Queue(size) {\r\n  if (!(size >= 1)) throw new Error;\r\n  this._size = size;\r\n  this._call =\r\n  this._error = null;\r\n  this._tasks = [];\r\n  this._data = [];\r\n  this._waiting =\r\n  this._active =\r\n  this._ended =\r\n  this._start = 0; // inside a synchronous task callback?\r\n}\r\n\r\nQueue.prototype = queue.prototype = {\r\n  constructor: Queue,\r\n  defer: function(callback) {\r\n    if (typeof callback !== \"function\" || this._call) throw new Error;\r\n    if (this._error != null) return this;\r\n    var t = slice.call(arguments, 1);\r\n    t.push(callback);\r\n    ++this._waiting, this._tasks.push(t);\r\n    poke(this);\r\n    return this;\r\n  },\r\n  abort: function() {\r\n    if (this._error == null) abort(this, new Error(\"abort\"));\r\n    return this;\r\n  },\r\n  await: function(callback) {\r\n    if (typeof callback !== \"function\" || this._call) throw new Error;\r\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\r\n    maybeNotify(this);\r\n    return this;\r\n  },\r\n  awaitAll: function(callback) {\r\n    if (typeof callback !== \"function\" || this._call) throw new Error;\r\n    this._call = callback;\r\n    maybeNotify(this);\r\n    return this;\r\n  }\r\n};\r\n\r\nfunction poke(q) {\r\n  if (!q._start) {\r\n    try { start(q); } // let the current task complete\r\n    catch (e) {\r\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\r\n      else if (!q._data) throw e; // await callback errored synchronously\r\n    }\r\n  }\r\n}\r\n\r\nfunction start(q) {\r\n  while (q._start = q._waiting && q._active < q._size) {\r\n    var i = q._ended + q._active,\r\n        t = q._tasks[i],\r\n        j = t.length - 1,\r\n        c = t[j];\r\n    t[j] = end(q, i);\r\n    --q._waiting, ++q._active;\r\n    t = c.apply(null, t);\r\n    if (!q._tasks[i]) continue; // task finished synchronously\r\n    q._tasks[i] = t || noabort;\r\n  }\r\n}\r\n\r\nfunction end(q, i) {\r\n  return function(e, r) {\r\n    if (!q._tasks[i]) return; // ignore multiple callbacks\r\n    --q._active, ++q._ended;\r\n    q._tasks[i] = null;\r\n    if (q._error != null) return; // ignore secondary errors\r\n    if (e != null) {\r\n      abort(q, e);\r\n    } else {\r\n      q._data[i] = r;\r\n      if (q._waiting) poke(q);\r\n      else maybeNotify(q);\r\n    }\r\n  };\r\n}\r\n\r\nfunction abort(q, e) {\r\n  var i = q._tasks.length, t;\r\n  q._error = e; // ignore active callbacks\r\n  q._data = undefined; // allow gc\r\n  q._waiting = NaN; // prevent starting\r\n\r\n  while (--i >= 0) {\r\n    if (t = q._tasks[i]) {\r\n      q._tasks[i] = null;\r\n      if (t.abort) {\r\n        try { t.abort(); }\r\n        catch (e) { /* ignore */ }\r\n      }\r\n    }\r\n  }\r\n\r\n  q._active = NaN; // allow notification\r\n  maybeNotify(q);\r\n}\r\n\r\nfunction maybeNotify(q) {\r\n  if (!q._active && q._call) {\r\n    var d = q._data;\r\n    q._data = undefined; // allow gc\r\n    q._call(q._error, d);\r\n  }\r\n}\r\n\r\nfunction queue(concurrency) {\r\n  return new Queue(arguments.length ? +concurrency : Infinity);\r\n}\r\n\r\nexports.queue = queue;\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));\r\n"]}